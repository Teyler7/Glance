{"version":3,"sources":["pouch-db.js"],"names":["ENTER_KEY","db","PouchDB","remoteCouch","changes","since","live","on","getTodos","addTodo","text","checkboxChanged","todo","event","deleteButtonPressed","todoFinished","sync","opts","replicate","to","syncError","from","syncDom","setAttribute","todoDblClicked","div","document","getElementById","_id","inputEditTodo","className","focus","todoKeyPressed","keyCode","blur","createTodoListItem","checkbox","createElement","type","addEventListener","bind","label","appendChild","createTextNode","title","deleteLink","divDisplay","id","value","todoBlurred","li","completed","checked","redrawTodosUI","todos","ul","innerHTML","forEach","doc","newTodoKeyPressHandler","addEventListeners"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,CAAC,YAAY;;AAET;;AAEA,MAAIA,YAAY,EAAhB;AACA;AACA;;AAEA;;AAEA,MAAIC,KAAK,IAAIC,OAAJ,CAAY,QAAZ,CAAT;AACA,MAAIC,cAAc,6CAAlB;;AAEAF,KAAGG,OAAH,CAAW;AACTC,WAAO,KADE;AAETC,UAAM;AAFG,GAAX,EAGGC,EAHH,CAGM,QAHN,EAGgBC,QAHhB;;AAKA;AACA,WAASC,OAAT,CAAiBC,IAAjB,EAAuB,CAWtB;AAVD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,WAASF,QAAT,GAAoB;AACpB;AACA;AACA;AACC;;AAED,WAASG,eAAT,CAAyBC,IAAzB,EAA+BC,KAA/B,EAAsC,CAGrC;AAFD;AACA;;;AAGA;AACA,WAASC,mBAAT,CAA6BF,IAA7B,EAAmC,CAElC;AADD;;;AAGA;AACA;AACA,WAASG,YAAT,CAAsBH,IAAtB,EAA4BC,KAA5B,EAAmC,CAQlC;AAPD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,WAASG,IAAT,GAAgB;AAChB;AACE,QAAIC,OAAO,EAACX,MAAM,IAAP,EAAX;AACAL,OAAGiB,SAAH,CAAaC,EAAb,CAAgBhB,WAAhB,EAA6Bc,IAA7B,EAAmCG,SAAnC;AACAnB,OAAGiB,SAAH,CAAaG,IAAb,CAAkBlB,WAAlB,EAA+Bc,IAA/B,EAAqCG,SAArC;AACD;;AAED;;AAEA;AACA,WAASA,SAAT,GAAqB;AACnBE,YAAQC,YAAR,CAAqB,iBAArB,EAAwC,OAAxC;AACD;;AAED;AACA,WAASC,cAAT,CAAwBZ,IAAxB,EAA8B;AAC5B,QAAIa,MAAMC,SAASC,cAAT,CAAwB,QAAQf,KAAKgB,GAArC,CAAV;AACA,QAAIC,gBAAgBH,SAASC,cAAT,CAAwB,WAAWf,KAAKgB,GAAxC,CAApB;AACAH,QAAIK,SAAJ,GAAgB,SAAhB;AACAD,kBAAcE,KAAd;AACD;;AAED;AACA;AACA,WAASC,cAAT,CAAwBpB,IAAxB,EAA8BC,KAA9B,EAAqC;AACnC,QAAIA,MAAMoB,OAAN,KAAkBjC,SAAtB,EAAiC;AAC/B,UAAI6B,gBAAgBH,SAASC,cAAT,CAAwB,WAAWf,KAAKgB,GAAxC,CAApB;AACAC,oBAAcK,IAAd;AACD;AACF;;AAED;AACA;AACA,WAASC,kBAAT,CAA4BvB,IAA5B,EAAkC;AAChC,QAAIwB,WAAWV,SAASW,aAAT,CAAuB,OAAvB,CAAf;AACAD,aAASN,SAAT,GAAqB,QAArB;AACAM,aAASE,IAAT,GAAgB,UAAhB;AACAF,aAASG,gBAAT,CAA0B,QAA1B,EAAoC5B,gBAAgB6B,IAAhB,CAAqB,IAArB,EAA2B5B,IAA3B,CAApC;;AAEA,QAAI6B,QAAQf,SAASW,aAAT,CAAuB,OAAvB,CAAZ;AACAI,UAAMC,WAAN,CAAkBhB,SAASiB,cAAT,CAAwB/B,KAAKgC,KAA7B,CAAlB;AACAH,UAAMF,gBAAN,CAAuB,UAAvB,EAAmCf,eAAegB,IAAf,CAAoB,IAApB,EAA0B5B,IAA1B,CAAnC;;AAEA,QAAIiC,aAAanB,SAASW,aAAT,CAAuB,QAAvB,CAAjB;AACAQ,eAAWf,SAAX,GAAuB,SAAvB;AACAe,eAAWN,gBAAX,CAA4B,OAA5B,EAAqCzB,oBAAoB0B,IAApB,CAAyB,IAAzB,EAA+B5B,IAA/B,CAArC;;AAEA,QAAIkC,aAAapB,SAASW,aAAT,CAAuB,KAAvB,CAAjB;AACAS,eAAWhB,SAAX,GAAuB,MAAvB;AACAgB,eAAWJ,WAAX,CAAuBN,QAAvB;AACAU,eAAWJ,WAAX,CAAuBD,KAAvB;AACAK,eAAWJ,WAAX,CAAuBG,UAAvB;;AAEA,QAAIhB,gBAAgBH,SAASW,aAAT,CAAuB,OAAvB,CAApB;AACAR,kBAAckB,EAAd,GAAmB,WAAWnC,KAAKgB,GAAnC;AACAC,kBAAcC,SAAd,GAA0B,MAA1B;AACAD,kBAAcmB,KAAd,GAAsBpC,KAAKgC,KAA3B;AACAf,kBAAcU,gBAAd,CAA+B,UAA/B,EAA2CP,eAAeQ,IAAf,CAAoB,IAApB,EAA0B5B,IAA1B,CAA3C;AACAiB,kBAAcU,gBAAd,CAA+B,MAA/B,EAAuCU,YAAYT,IAAZ,CAAiB,IAAjB,EAAuB5B,IAAvB,CAAvC;;AAEA,QAAIsC,KAAKxB,SAASW,aAAT,CAAuB,IAAvB,CAAT;AACAa,OAAGH,EAAH,GAAQ,QAAQnC,KAAKgB,GAArB;AACAsB,OAAGR,WAAH,CAAeI,UAAf;AACAI,OAAGR,WAAH,CAAeb,aAAf;;AAEA,QAAIjB,KAAKuC,SAAT,EAAoB;AAClBD,SAAGpB,SAAH,IAAgB,UAAhB;AACAM,eAASgB,OAAT,GAAmB,IAAnB;AACD;;AAED,WAAOF,EAAP;AACD;;AAED,WAASG,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAIC,KAAK7B,SAASC,cAAT,CAAwB,WAAxB,CAAT;AACA4B,OAAGC,SAAH,GAAe,EAAf;AACAF,UAAMG,OAAN,CAAc,UAAU7C,IAAV,EAAgB;AAC5B2C,SAAGb,WAAH,CAAeP,mBAAmBvB,KAAK8C,GAAxB,CAAf;AACD,KAFD;AAGD;;AAED,WAASC,sBAAT,CAAgC9C,KAAhC,EAAuC;AACvC;AACA;AACA;AACA;AACC;;AAED,WAAS+C,iBAAT,GAA6B,CAE5B;AADD;;;AAGA;AACA;;AAEA,MAAIzD,WAAJ,EAAiB;AACfa;AACD;AAEF,CAjKH","file":"pouch-db.bd6bd922.map","sourceRoot":"../src","sourcesContent":["(function () {\n\n    'use strict';\n  \n    var ENTER_KEY = 13;\n    // var newTodoDom = document.getElementById('new-todo');\n    // var syncDom = document.getElementById('sync-wrapper');\n  \n    // EDITING STARTS HERE (you dont need to edit anything above this line)\n  \n    var db = new PouchDB('glance');\n    var remoteCouch = \"http://admin:password@127.0.0.1:5984/glance\";\n  \n    db.changes({\n      since: 'now',\n      live: true\n    }).on('change', getTodos);\n  \n    // We have to create a new todo document and enter it in the database\n    function addTodo(text) {\n    //   var todo = {\n    //     _id: new Date().toISOString(),\n    //     title: text,\n    //     completed: false\n    //   };\n    //   db.put(todo, function callback(err, result) {\n    //     if (!err) {\n    //       console.log('Successfully posted a todo!');\n    //     }\n    //   });\n    }\n  \n    // Show the current list of todos by reading them from the database\n    function getTodos() {\n    //   db.allDocs({ include_docs: true, descending: true }, function (err, doc) {\n    //     redrawTodosUI(doc.rows);\n    //   });\n    }\n  \n    function checkboxChanged(todo, event) {\n    //   todo.completed = event.target.checked;\n    //   db.put(todo);\n    }\n  \n    // User pressed the delete button for a todo, delete it\n    function deleteButtonPressed(todo) {\n    //   db.remove(todo);\n    }\n  \n    // The input box when editing a todo has blurred, we should save\n    // the new title or delete the todo if the title is empty\n    function todoFinished(todo, event) {\n    //   var trimmedText = event.target.value.trim();\n    //   if (!trimmedText) {\n    //     db.remove(todo);\n    //   } else {\n    //     todo.title = trimmedText;\n    //     db.put(todo);\n    //   }\n    }\n  \n    // Initialise a sync with the remote server\n    function sync() {\n    //   syncDom.setAttribute('data-sync-state', 'syncing');\n      var opts = {live: true};\n      db.replicate.to(remoteCouch, opts, syncError);\n      db.replicate.from(remoteCouch, opts, syncError);\n    }\n  \n    // EDITING STARTS HERE (you dont need to edit anything below this line)\n  \n    // There was some form or error syncing\n    function syncError() {\n      syncDom.setAttribute('data-sync-state', 'error');\n    }\n  \n    // User has double clicked a todo, display an input so they can edit the title\n    function todoDblClicked(todo) {\n      var div = document.getElementById('li_' + todo._id);\n      var inputEditTodo = document.getElementById('input_' + todo._id);\n      div.className = 'editing';\n      inputEditTodo.focus();\n    }\n  \n    // If they press enter while editing an entry, blur it to trigger save\n    // (or delete)\n    function todoKeyPressed(todo, event) {\n      if (event.keyCode === ENTER_KEY) {\n        var inputEditTodo = document.getElementById('input_' + todo._id);\n        inputEditTodo.blur();\n      }\n    }\n  \n    // Given an object representing a todo, this will create a list item\n    // to display it.\n    function createTodoListItem(todo) {\n      var checkbox = document.createElement('input');\n      checkbox.className = 'toggle';\n      checkbox.type = 'checkbox';\n      checkbox.addEventListener('change', checkboxChanged.bind(this, todo));\n  \n      var label = document.createElement('label');\n      label.appendChild(document.createTextNode(todo.title));\n      label.addEventListener('dblclick', todoDblClicked.bind(this, todo));\n  \n      var deleteLink = document.createElement('button');\n      deleteLink.className = 'destroy';\n      deleteLink.addEventListener('click', deleteButtonPressed.bind(this, todo));\n  \n      var divDisplay = document.createElement('div');\n      divDisplay.className = 'view';\n      divDisplay.appendChild(checkbox);\n      divDisplay.appendChild(label);\n      divDisplay.appendChild(deleteLink);\n  \n      var inputEditTodo = document.createElement('input');\n      inputEditTodo.id = 'input_' + todo._id;\n      inputEditTodo.className = 'edit';\n      inputEditTodo.value = todo.title;\n      inputEditTodo.addEventListener('keypress', todoKeyPressed.bind(this, todo));\n      inputEditTodo.addEventListener('blur', todoBlurred.bind(this, todo));\n  \n      var li = document.createElement('li');\n      li.id = 'li_' + todo._id;\n      li.appendChild(divDisplay);\n      li.appendChild(inputEditTodo);\n  \n      if (todo.completed) {\n        li.className += 'complete';\n        checkbox.checked = true;\n      }\n  \n      return li;\n    }\n  \n    function redrawTodosUI(todos) {\n      var ul = document.getElementById('todo-list');\n      ul.innerHTML = '';\n      todos.forEach(function (todo) {\n        ul.appendChild(createTodoListItem(todo.doc));\n      });\n    }\n  \n    function newTodoKeyPressHandler(event) {\n    //   if (event.keyCode === ENTER_KEY) {\n    //     addTodo(newTodoDom.value);\n    //     newTodoDom.value = '';\n    //   }\n    }\n  \n    function addEventListeners() {\n    //   newTodoDom.addEventListener('keypress', newTodoKeyPressHandler, false);\n    }\n  \n    // addEventListeners();\n    // showTodos();\n  \n    if (remoteCouch) {\n      sync();\n    }\n  \n  })();"]}